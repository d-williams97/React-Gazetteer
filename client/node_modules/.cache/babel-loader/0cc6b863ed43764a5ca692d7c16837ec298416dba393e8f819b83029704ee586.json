{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\nconst List = props => {\n  _s();\n  useEffect(() => {\n    console.log(props.location);\n    changeOnLoadHandler();\n    // function to get country data to initiate change of select.\n  }, [props.countryData]);\n  const [selectVal, setSelectVal] = useState('AF');\n  const map = useMap();\n  const getBoundsHandler = async countryName => {\n    const data = await fetch(`${API_BASE}/bounds-data/${countryName}`).then(res => res.json()).then(data => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    }).catch(err => {\n      console.error(\"Error: \", err);\n    });\n    return data;\n  };\n  const changeOnLoadHandler = async () => {\n    const data = await fetch(`${API_BASE}/get-country`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        lat: props.location.latitude,\n        lng: props.location.longitude\n      })\n    }).then(res => res.json()).then(data => {\n      setSelectVal(data.countryCode);\n    }).catch(e => console.error('Error:', e));\n    changeCountryHandler(data);\n  };\n\n  // country change event //\n  const changeCountryHandler = async value => {\n    let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    countryName = selectedCountry.properties.name;\n    countryCode = value;\n    props.borderHandler(selectedCountry); // getting border\n    props.getAirports(countryCode); // getting airport data \n    props.getCities(countryCode); // getting city data \n    getBoundsHandler(countryName); // changes map view\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(Form.Select, {\n      \"aria-label\": \"Default select example\",\n      value: selectVal,\n      onChange: e => {\n        changeCountryHandler(e.target.value);\n      },\n      children: props.countryData && props.countryData.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.properties.iso_a2,\n        children: country.properties.name\n      }, country.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"F6kXHb4r9owid+UxT8A9X8+6FDc=\", false, function () {\n  return [useMap];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","styles","Form","useMap","jsxDEV","_jsxDEV","API_BASE","countryName","countryCode","List","props","_s","console","log","location","changeOnLoadHandler","countryData","selectVal","setSelectVal","map","getBoundsHandler","data","fetch","then","res","json","bounds","Object","values","southwest","northeast","fitBounds","catch","err","error","method","headers","body","JSON","stringify","lat","latitude","lng","longitude","e","changeCountryHandler","value","selectedCountry","find","country","properties","iso_a2","name","borderHandler","getAirports","getCities","className","list","children","Select","onChange","target","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\n\n\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\n\n\nconst List = (props) => {\n\n  useEffect(() => {\n    console.log(props.location);\n    changeOnLoadHandler();\n    // function to get country data to initiate change of select.\n  },[props.countryData])\n\n  const [selectVal, setSelectVal] = useState('AF')\n\n\n  const map = useMap();\n\n  const getBoundsHandler = async (countryName) => {\n    const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n    .then((res) => res.json())\n    .then((data) => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    })\n    .catch((err) => {\n      console.error(\"Error: \", err)\n    })\n    return data;\n}\n\n\nconst changeOnLoadHandler = async () => {\n  const data = await fetch(`${API_BASE}/get-country`,{\n    method: 'POST',\n    headers: {\n      \"Content-Type\": 'application/json',\n    },\n    body : JSON.stringify({\n      lat: props.location.latitude,\n      lng: props.location.longitude\n    })\n  })\n  .then(res => res.json())\n  .then((data) => {\n    setSelectVal(data.countryCode);\n  })\n  .catch(e => console.error('Error:', e))\n  \n  changeCountryHandler(data);\n}\n\n// country change event //\nconst changeCountryHandler = async (value) => {\n    let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    countryName = selectedCountry.properties.name;\n    countryCode = value;\n    props.borderHandler(selectedCountry); // getting border\n    props.getAirports(countryCode); // getting airport data \n    props.getCities(countryCode); // getting city data \n    getBoundsHandler(countryName); // changes map view\n}\n\n\n\n\n\n\n\n  return (\n    <div className={styles.list}>\n      <Form.Select aria-label=\"Default select example\"  value={selectVal}  onChange={(e) => {\n        changeCountryHandler(e.target.value);\n      }}>\n        {props.countryData && props.countryData.map(country => (\n        <option value={country.properties.iso_a2} key={country.key}>{country.properties.name}</option>\n      ))}\n   </Form.Select>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}