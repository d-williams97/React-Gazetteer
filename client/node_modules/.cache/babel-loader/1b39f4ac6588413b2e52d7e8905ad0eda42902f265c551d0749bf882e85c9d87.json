{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/buttons/BasicDataBtn.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"./Button.module.css\";\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport infoIcon from \"../../../assets/info.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:3001';\nconst BasicDataBtn = props => {\n  _s();\n  const [modalShow, setModalShow] = useState(false);\n  const [basicData, setBasicData] = useState(false);\n  const handleModalClose = () => {\n    setModalShow(false);\n  };\n  const basicDataBtnHandler = async () => {\n    setModalShow(true);\n    const data = await fetch(`${API_BASE}/basic-data/${props.geoJsonData.properties.iso_a2}`).then(res => res.json()).catch(e => console.error('Error: ', e));\n    console.log(data);\n\n    // const flag = \n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: infoIcon,\n        className: styles.icon,\n        onClick: basicDataBtnHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalShow,\n      onHide: handleModalClose,\n      animation: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you are reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleModalClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BasicDataBtn, \"/siJRZiUXHwLjLU0d1Xw01BmJBM=\");\n_c = BasicDataBtn;\nexport default BasicDataBtn;\nvar _c;\n$RefreshReg$(_c, \"BasicDataBtn\");","map":{"version":3,"names":["React","styles","useState","Button","Modal","infoIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","BasicDataBtn","props","_s","modalShow","setModalShow","basicData","setBasicData","handleModalClose","basicDataBtnHandler","data","fetch","geoJsonData","properties","iso_a2","then","res","json","catch","e","console","error","log","children","className","button","src","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","animation","Header","closeButton","Title","Body","Footer","variant","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/buttons/BasicDataBtn.jsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./Button.module.css\";\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport infoIcon from \"../../../assets/info.png\";\n\nconst API_BASE = 'http://localhost:3001'\n\nconst BasicDataBtn = (props) => {\n  const [modalShow, setModalShow] = useState(false);\n  const [basicData, setBasicData ] = useState(false);\n\n\n  const handleModalClose = () => {\n    setModalShow(false)\n  }\n\n  const basicDataBtnHandler = async () => {\n    setModalShow(true);\n    const data  = await fetch(`${API_BASE}/basic-data/${props.geoJsonData.properties.iso_a2}`)\n    .then(res => res.json())\n    .catch(e => console.error('Error: ', e))\n    console.log(data);\n\n    // const flag = \n\n  };\n\n  return (\n    <>\n      <button className={styles.button}>\n        <img\n          src={infoIcon}\n          className={styles.icon}\n          onClick={basicDataBtnHandler}\n        />\n      </button>\n\n      <Modal show={modalShow} onHide={handleModalClose} animation={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you are reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleModalClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleModalClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default BasicDataBtn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}