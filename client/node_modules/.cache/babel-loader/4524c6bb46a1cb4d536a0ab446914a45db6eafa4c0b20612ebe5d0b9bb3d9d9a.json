{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\nconst List = props => {\n  _s();\n  useEffect(() => {\n    console.log(props.countryData);\n  }, [props.countryData]);\n  const map = useMap();\n  const getBoundsHandler = async countryName => {\n    const data = await fetch(`${API_BASE}/bounds-data/${countryName}`).then(res => res.json()).then(data => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    }).catch(err => {\n      console.error(\"Error: \", err);\n    });\n    return data;\n  };\n  const changeCountryHandler = async value => {\n    let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    countryName = selectedCountry.properties.name;\n    countryCode = value;\n    props.borderHandler(selectedCountry); // getting border\n    props.getAirports(countryCode); // getting airport data \n    props.getCities(countryCode); // getting city data \n    getBoundsHandler(countryName); // changes map view\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(Form.Select, {\n      \"aria-label\": \"Default select example\",\n      value: selectVal,\n      onChange: e => {\n        changeCountryHandler(e.target.value);\n      },\n      children: props.countryData && props.countryData.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.properties.iso_a2,\n        children: country.properties.name\n      }, country.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"g/opmkKFmBjK6NyEkJEqzInpY2w=\", false, function () {\n  return [useMap];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","styles","Form","useMap","jsxDEV","_jsxDEV","API_BASE","countryName","countryCode","List","props","_s","console","log","countryData","map","getBoundsHandler","data","fetch","then","res","json","bounds","Object","values","southwest","northeast","fitBounds","catch","err","error","changeCountryHandler","value","selectedCountry","find","country","properties","iso_a2","name","borderHandler","getAirports","getCities","className","list","children","Select","selectVal","onChange","e","target","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\n\n\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\n\n\nconst List = (props) => {\n\n\n  useEffect(() => {\n    console.log(props.countryData)\n  },[props.countryData])\n\n\n  const map = useMap();\n\n  const getBoundsHandler = async (countryName) => {\n    const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n    .then((res) => res.json())\n    .then((data) => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    })\n    .catch((err) => {\n      console.error(\"Error: \", err)\n    })\n    return data;\n}\n\n\n\n\nconst changeCountryHandler = async (value) => {\n    let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    countryName = selectedCountry.properties.name;\n    countryCode = value;\n    props.borderHandler(selectedCountry); // getting border\n    props.getAirports(countryCode); // getting airport data \n    props.getCities(countryCode); // getting city data \n    getBoundsHandler(countryName); // changes map view\n  }\n\n\n\n\n\n\n\n\n  return (\n    <div className={styles.list}>\n      <Form.Select aria-label=\"Default select example\" value={selectVal}  onChange={(e) => {\n        changeCountryHandler(e.target.value);\n      }}>\n        {props.countryData && props.countryData.map(country => (\n        <option value={country.properties.iso_a2} key={country.key}>{country.properties.name}</option>\n      ))}\n   </Form.Select>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,QAAQ,GAAG,uBAAuB;AACxC,IAAIC,WAAW;AACf,IAAIC,WAAW;AAGf,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAGtBX,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,WAAW,CAAC;EAChC,CAAC,EAAC,CAACJ,KAAK,CAACI,WAAW,CAAC,CAAC;EAGtB,MAAMC,GAAG,GAAGZ,MAAM,CAAC,CAAC;EAEpB,MAAMa,gBAAgB,GAAG,MAAOT,WAAW,IAAK;IAC9C,MAAMU,IAAI,GAAG,MAAMC,KAAK,CAAG,GAAEZ,QAAS,gBAAeC,WAAY,EAAC,CAAC,CAClEY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEF,IAAI,IAAK;MACd,IAAIK,MAAM,GAAG,CAACC,MAAM,CAACC,MAAM,CAACP,IAAI,CAACK,MAAM,CAACG,SAAS,CAAC,EAAEF,MAAM,CAACC,MAAM,CAACP,IAAI,CAACK,MAAM,CAACI,SAAS,CAAC,CAAC;MACzFX,GAAG,CAACY,SAAS,CAACL,MAAM,CAAC;IACvB,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdjB,OAAO,CAACkB,KAAK,CAAC,SAAS,EAAED,GAAG,CAAC;IAC/B,CAAC,CAAC;IACF,OAAOZ,IAAI;EACf,CAAC;EAKD,MAAMc,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC1C,IAAIC,eAAe,GAAGvB,KAAK,CAACI,WAAW,CAACoB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,UAAU,CAACC,MAAM,KAAKL,KAAK,CAAC;IAC5FzB,WAAW,GAAG0B,eAAe,CAACG,UAAU,CAACE,IAAI;IAC7C9B,WAAW,GAAGwB,KAAK;IACnBtB,KAAK,CAAC6B,aAAa,CAACN,eAAe,CAAC,CAAC,CAAC;IACtCvB,KAAK,CAAC8B,WAAW,CAAChC,WAAW,CAAC,CAAC,CAAC;IAChCE,KAAK,CAAC+B,SAAS,CAACjC,WAAW,CAAC,CAAC,CAAC;IAC9BQ,gBAAgB,CAACT,WAAW,CAAC,CAAC,CAAC;EACjC,CAAC;;EASD,oBACEF,OAAA;IAAKqC,SAAS,EAAEzC,MAAM,CAAC0C,IAAK;IAAAC,QAAA,eAC1BvC,OAAA,CAACH,IAAI,CAAC2C,MAAM;MAAC,cAAW,wBAAwB;MAACb,KAAK,EAAEc,SAAU;MAAEC,QAAQ,EAAGC,CAAC,IAAK;QACnFjB,oBAAoB,CAACiB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAC;MACtC,CAAE;MAAAY,QAAA,EACClC,KAAK,CAACI,WAAW,IAAIJ,KAAK,CAACI,WAAW,CAACC,GAAG,CAACoB,OAAO,iBACnD9B,OAAA;QAAQ2B,KAAK,EAAEG,OAAO,CAACC,UAAU,CAACC,MAAO;QAAAO,QAAA,EAAoBT,OAAO,CAACC,UAAU,CAACE;MAAI,GAArCH,OAAO,CAACe,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC9F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAtDIF,IAAI;EAAA,QAQIN,MAAM;AAAA;AAAAoD,EAAA,GARd9C,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}