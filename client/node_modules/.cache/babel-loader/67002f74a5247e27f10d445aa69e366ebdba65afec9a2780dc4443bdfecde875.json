{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\nconst List = props => {\n  _s();\n  const map = useMap();\n  const getBoundsHandler = async countryName => {\n    const data = await fetch(`${API_BASE}/bounds-data/${countryName}`).then(res => res.json()).then(data => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    }).catch(err => {\n      console.error(\"Error: \", err);\n    });\n    return data;\n  };\n\n  // country change event //\n  const changeCountryHandler = async value => {\n    // let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    // countryName = selectedCountry.properties.name;\n    // countryCode = value;\n    // props.borderHandler(selectedCountry); // getting border\n    // props.getAirports(countryCode); // getting airport data \n    // props.getCities(countryCode); // getting city data \n    // getBoundsHandler(countryName); // changes map view\n    console.log(props.location);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(Form.Select, {\n      \"aria-label\": \"Default select example\",\n      onChange: e => {\n        changeCountryHandler(e.target.value);\n      },\n      children: props.countryData && props.countryData.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.properties.iso_a2,\n        children: country.properties.name\n      }, country.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","styles","Form","useMap","jsxDEV","_jsxDEV","API_BASE","countryName","countryCode","List","props","_s","map","getBoundsHandler","data","fetch","then","res","json","bounds","Object","values","southwest","northeast","fitBounds","catch","err","console","error","changeCountryHandler","value","log","location","className","list","children","Select","onChange","e","target","countryData","country","properties","iso_a2","name","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMap } from \"react-leaflet\";\n\n\nconst API_BASE = \"http://localhost:3001\";\nlet countryName;\nlet countryCode;\n\nconst List = (props) => {\n\n  \n    const map = useMap();\n\n  const getBoundsHandler = async (countryName) => {\n    const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n    .then((res) => res.json())\n    .then((data) => {\n      let bounds = [Object.values(data.bounds.southwest), Object.values(data.bounds.northeast)];\n      map.fitBounds(bounds);\n    })\n    .catch((err) => {\n      console.error(\"Error: \", err)\n    })\n    return data;\n}\n\n\n\n\n// country change event //\nconst changeCountryHandler = async (value) => {\n    // let selectedCountry = props.countryData.find(country => country.properties.iso_a2 === value);\n    // countryName = selectedCountry.properties.name;\n    // countryCode = value;\n    // props.borderHandler(selectedCountry); // getting border\n    // props.getAirports(countryCode); // getting airport data \n    // props.getCities(countryCode); // getting city data \n    // getBoundsHandler(countryName); // changes map view\n    console.log(props.location)\n}\n\n\n\n\n\n  return (\n    <div className={styles.list}>\n      <Form.Select aria-label=\"Default select example\" onChange={(e) => {\n        changeCountryHandler(e.target.value);\n     \n      }}>\n        {props.countryData && props.countryData.map(country => (\n        <option value={country.properties.iso_a2} key={country.key}>{country.properties.name}</option>\n      ))}\n   </Form.Select>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,QAAQ,GAAG,uBAAuB;AACxC,IAAIC,WAAW;AACf,IAAIC,WAAW;AAEf,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAGpB,MAAMC,GAAG,GAAGT,MAAM,CAAC,CAAC;EAEtB,MAAMU,gBAAgB,GAAG,MAAON,WAAW,IAAK;IAC9C,MAAMO,IAAI,GAAG,MAAMC,KAAK,CAAG,GAAET,QAAS,gBAAeC,WAAY,EAAC,CAAC,CAClES,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEF,IAAI,IAAK;MACd,IAAIK,MAAM,GAAG,CAACC,MAAM,CAACC,MAAM,CAACP,IAAI,CAACK,MAAM,CAACG,SAAS,CAAC,EAAEF,MAAM,CAACC,MAAM,CAACP,IAAI,CAACK,MAAM,CAACI,SAAS,CAAC,CAAC;MACzFX,GAAG,CAACY,SAAS,CAACL,MAAM,CAAC;IACvB,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEF,GAAG,CAAC;IAC/B,CAAC,CAAC;IACF,OAAOZ,IAAI;EACf,CAAC;;EAKD;EACA,MAAMe,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;IACAH,OAAO,CAACI,GAAG,CAACrB,KAAK,CAACsB,QAAQ,CAAC;EAC/B,CAAC;EAMC,oBACE3B,OAAA;IAAK4B,SAAS,EAAEhC,MAAM,CAACiC,IAAK;IAAAC,QAAA,eAC1B9B,OAAA,CAACH,IAAI,CAACkC,MAAM;MAAC,cAAW,wBAAwB;MAACC,QAAQ,EAAGC,CAAC,IAAK;QAChET,oBAAoB,CAACS,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC;MAEtC,CAAE;MAAAK,QAAA,EACCzB,KAAK,CAAC8B,WAAW,IAAI9B,KAAK,CAAC8B,WAAW,CAAC5B,GAAG,CAAC6B,OAAO,iBACnDpC,OAAA;QAAQyB,KAAK,EAAEW,OAAO,CAACC,UAAU,CAACC,MAAO;QAAAR,QAAA,EAAoBM,OAAO,CAACC,UAAU,CAACE;MAAI,GAArCH,OAAO,CAACI,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC9F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACtC,EAAA,CAjDIF,IAAI;EAAA,QAGMN,MAAM;AAAA;AAAA+C,EAAA,GAHhBzC,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}