{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { MapContainer, TileLayer, LayersControl, GeoJSON } from \"react-leaflet\";\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport List from \"./list/List\";\nimport MapLayers from \"./mapLayers/MapLayers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst Map = props => {\n  _s();\n  const [border, setBorder] = useState(null);\n  console.log(border);\n  const borderHandler = x => {\n    setBorder(x);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      scrollWheelZoom: true,\n      minZoom: 1,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        borderHandler: borderHandler,\n        border: border\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapLayers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: border ? border : \"\",\n        style: {\n          color: 'red',\n          weight: 1,\n          opacity: 1\n        }\n      }, JSON.stringify(border), false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Map, \"DxRhtSzCTAr6EtVqbv0K9v3FCoU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","LayersControl","GeoJSON","styles","List","MapLayers","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Map","props","_s","border","setBorder","console","log","borderHandler","x","children","center","zoom","scrollWheelZoom","minZoom","fileName","_jsxFileName","lineNumber","columnNumber","data","style","color","weight","opacity","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  LayersControl,\n  GeoJSON,\n} from \"react-leaflet\";\n\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport List from \"./list/List\";\nimport MapLayers from \"./mapLayers/MapLayers\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nconst Map = (props) => {\n  const [border, setBorder] = useState(null);\n  console.log(border);\n\n  const borderHandler = (x) => {\n    setBorder(x);\n  };\n\n  return (\n    <>\n      <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true} minZoom={1} >\n        <List borderHandler={borderHandler} border={border} />\n        {/* <Marker position={[51.505, -0.09]}>\n      <Popup>\n        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup>\n    </Marker> */}\n    <MapLayers />\n        <GeoJSON data={border ? border : \"\"} key={JSON.stringify(border)} style={{\n          color:'red',\n          weight: 1,\n          opacity: 1,}\n        } />\n      </MapContainer>\n    </>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SACEC,YAAY,EACZC,SAAS,EACTC,aAAa,EACbC,OAAO,QACF,eAAe;AAEtB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,0BAA0B;AAEjC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1CkB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAEnB,MAAMI,aAAa,GAAIC,CAAC,IAAK;IAC3BJ,SAAS,CAACI,CAAC,CAAC;EACd,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA,CAACR,YAAY;MAACsB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,eAAe,EAAE,IAAK;MAACC,OAAO,EAAE,CAAE;MAAAJ,QAAA,gBACvEb,OAAA,CAACH,IAAI;QAACc,aAAa,EAAEA,aAAc;QAACJ,MAAM,EAAEA;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAM1DrB,OAAA,CAACF,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTrB,OAAA,CAACL,OAAO;QAAC2B,IAAI,EAAEf,MAAM,GAAGA,MAAM,GAAG,EAAG;QAA8BgB,KAAK,EAAE;UACvEC,KAAK,EAAC,KAAK;UACXC,MAAM,EAAE,CAAC;UACTC,OAAO,EAAE;QAAE;MACZ,GAJyCC,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC,gBACf,CAAC;AAEP,CAAC;AAACf,EAAA,CA1BIF,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}