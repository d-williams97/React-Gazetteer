{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst List = () => {\n  _s();\n  const [countryData, setCountryData] = useState(null);\n  let countryCode;\n  let countryName;\n\n  //get data\n  useEffect(() => {\n    // For getting country data\n    getCountries();\n  }, []);\n\n  // Getting country data for select\n  const getCountries = async () => {\n    try {\n      const data = await fetch(`${API_BASE}/country-data`).then(res => res.json()).then(data => {\n        console.log(data);\n        setCountryData(data);\n      }).catch(err => console.error(\"Error: \", err));\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n  const changeCountryHandler = value => {\n    countryCode = value;\n    countryName = countryData.find(country => country.iso_a2 === countryCode.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(Form.Select, {\n      \"aria-label\": \"Default select example\",\n      onChange: e => {\n        changeCountryHandler(e.target.value);\n      },\n      children: countryData && countryData.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.properties.iso_a2,\n        children: country.properties.name\n      }, country.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"niFgzD3tf5f0ThrBDA94ddhrxQY=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","styles","Form","jsxDEV","_jsxDEV","API_BASE","List","_s","countryData","setCountryData","countryCode","countryName","getCountries","data","fetch","then","res","json","console","log","catch","err","error","e","changeCountryHandler","value","find","country","iso_a2","name","className","list","children","Select","onChange","target","map","properties","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/list/List.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styles from \"./List.module.css\";\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst API_BASE = \"http://localhost:3001\";\n\nconst List = () => {\n  const [countryData, setCountryData] = useState(null);\n  let countryCode;\n  let countryName;\n\n  //get data\n  useEffect(() => {\n    // For getting country data\n    getCountries();\n  }, []);\n\n  // Getting country data for select\n  const getCountries = async () => {\n    try {\n    const data = await fetch(`${API_BASE}/country-data`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setCountryData(data);\n      })\n      .catch((err) => console.error(\"Error: \", err));    \n  } catch (e) {\n    console.error('Error: ', e);\n  }\n}\n\nconst changeCountryHandler = (value) => {\n    countryCode = value;\n    countryName = countryData.find(country => country.iso_a2 === countryCode.name);\n\n}\n\n\n  return (\n    <div className={styles.list}>\n      <Form.Select aria-label=\"Default select example\" onChange={(e) => {\n        changeCountryHandler(e.target.value);\n     \n      }}>\n        {countryData && countryData.map(country => (\n        <option value={country.properties.iso_a2} key={country.key}>{country.properties.name}</option>\n      ))}\n   </Form.Select>\n    </div>\n  );\n};\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,IAAIW,WAAW;EACf,IAAIC,WAAW;;EAEf;EACAX,SAAS,CAAC,MAAM;IACd;IACAY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACJ,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAET,QAAS,eAAc,CAAC,CACjDU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEF,IAAI,IAAK;QACdK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;QACjBJ,cAAc,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAAC,SAAS,EAAED,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVL,OAAO,CAACI,KAAK,CAAC,SAAS,EAAEC,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACpCf,WAAW,GAAGe,KAAK;IACnBd,WAAW,GAAGH,WAAW,CAACkB,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAKlB,WAAW,CAACmB,IAAI,CAAC;EAElF,CAAC;EAGC,oBACEzB,OAAA;IAAK0B,SAAS,EAAE7B,MAAM,CAAC8B,IAAK;IAAAC,QAAA,eAC1B5B,OAAA,CAACF,IAAI,CAAC+B,MAAM;MAAC,cAAW,wBAAwB;MAACC,QAAQ,EAAGX,CAAC,IAAK;QAChEC,oBAAoB,CAACD,CAAC,CAACY,MAAM,CAACV,KAAK,CAAC;MAEtC,CAAE;MAAAO,QAAA,EACCxB,WAAW,IAAIA,WAAW,CAAC4B,GAAG,CAACT,OAAO,iBACvCvB,OAAA;QAAQqB,KAAK,EAAEE,OAAO,CAACU,UAAU,CAACT,MAAO;QAAAI,QAAA,EAAoBL,OAAO,CAACU,UAAU,CAACR;MAAI,GAArCF,OAAO,CAACW,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC9F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACnC,EAAA,CA7CID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}