{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON } from \"react-leaflet\";\nimport List from \"./list/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst Map = props => {\n  _s();\n  const [border, setBorder] = useState(null);\n  const borderHandler = x => {\n    setBorder(x);\n  };\n\n  //   const fetchBounds = async () => {\n\n  //   if(border) {\n  //     try {\n  //       const data = await getBoundsHandler(border.properties.name)\n\n  //     } catch(e) {\n  //       console.error(e)\n  //     }\n  //   }\n  //   }\n\n  //   // get data from openCageData to get boundary data \n  //   const getBoundsHandler = async (countryName) => {\n  //     const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //       return data.bounds;\n  //     })\n  //     .catch((err) => {\n  //       console.error(\"Error: \", err)\n  //       return null;\n  //     })\n  //     return data;\n  // }\n\n  // function to fit data to bounds\n  // const fitToBounds = (bounds) => {\n  //   const map = useMap();\n  //   map.fitBounds()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        borderHandler: borderHandler,\n        border: border\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: border ? border : ''\n      }, JSON.stringify(border), false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Map, \"DxRhtSzCTAr6EtVqbv0K9v3FCoU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","styles","MapContainer","TileLayer","useMap","GeoJSON","List","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Map","props","_s","border","setBorder","borderHandler","x","children","center","zoom","scrollWheelZoom","fileName","_jsxFileName","lineNumber","columnNumber","attribution","url","data","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport {useState} from 'react'\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON, } from \"react-leaflet\";\nimport List from \"./list/List\";\n\n\nconst API_BASE = \"http://localhost:3001\";\n\n\nconst Map = (props) => {\n\n  const [border, setBorder] = useState(null)\n\n  const borderHandler = (x) => {\n     setBorder(x);\n  }\n\n\n//   const fetchBounds = async () => {\n    \n//   if(border) {\n//     try {\n//       const data = await getBoundsHandler(border.properties.name)\n\n//     } catch(e) {\n//       console.error(e)\n//     }\n//   }\n//   }\n\n\n\n//   // get data from openCageData to get boundary data \n//   const getBoundsHandler = async (countryName) => {\n//     const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n//     .then((res) => res.json())\n//     .then((data) => {\n//       console.log(data);\n//       return data.bounds;\n//     })\n//     .catch((err) => {\n//       console.error(\"Error: \", err)\n//       return null;\n//     })\n//     return data;\n// }\n\n// function to fit data to bounds\n// const fitToBounds = (bounds) => {\n//   const map = useMap();\n//   map.fitBounds()\n// }\n\n  return (\n    <>\n    \n      <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true}>\n      <List\n     borderHandler={borderHandler}\n     border={border}/>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {/* <Marker position={[51.505, -0.09]}>\n      <Popup>\n        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup>\n    </Marker> */}\n    <GeoJSON data={border ? border : ''} key={JSON.stringify(border)}/>\n      </MapContainer>\n    </>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,0BAA0B;AACjC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAS,eAAe;AACzE,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/B,MAAMC,QAAQ,GAAG,uBAAuB;AAGxC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMiB,aAAa,GAAIC,CAAC,IAAK;IAC1BF,SAAS,CAACE,CAAC,CAAC;EACf,CAAC;;EAGH;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEE,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eAEEX,OAAA,CAACN,YAAY;MAACkB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,eAAe,EAAE,IAAK;MAAAH,QAAA,gBAC7DX,OAAA,CAACF,IAAI;QACNW,aAAa,EAAEA,aAAc;QAC7BF,MAAM,EAAEA;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACdlB,OAAA,CAACL,SAAS;QACRwB,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAMNlB,OAAA,CAACH,OAAO;QAACwB,IAAI,EAAEd,MAAM,GAAGA,MAAM,GAAG;MAAG,GAAMe,IAAI,CAACC,SAAS,CAAChB,MAAM,CAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC,gBACf,CAAC;AAEP,CAAC;AAACZ,EAAA,CAhEIF,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkET,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}