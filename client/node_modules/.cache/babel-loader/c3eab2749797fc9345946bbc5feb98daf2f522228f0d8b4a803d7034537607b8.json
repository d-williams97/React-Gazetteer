{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/buttons/WeatherBtn.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ModalPreloader from \"../../modal preloader/ModalPreloader\";\nimport styles from \"./Button.module.css\";\nimport modalStyles from './Modal.module.css';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport numeral from \"numeral\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloud } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:3001';\nconst WeatherBtn = props => {\n  _s();\n  const [modalShow, setModalShow] = useState(false);\n  const [weatherData, setWeatherData] = useState(false);\n  const [loading, setLoading] = useState(false);\n  console.log(props.geoJsonData);\n  useEffect(() => {\n    // For loading the preloader\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, [weatherData]);\n  const weatherBtnHandler = async () => {\n    setModalShow(true);\n    // Get capital City\n    const capitalCity = await fetch(`${API_BASE}/capital-city/${props.geoJsonData.properties.iso_a2}`).then(res => res.json()).catch(e => console.error('Error', e));\n\n    // Get Weather data\n    const weather = await fetch(`${API_BASE}/weather/${capitalCity}`).then(res => res.json()).then(data => {\n      console.log(data);\n      let icon = data.forecast.forecastday[0].day.condition.icon;\n      let icon1 = data.forecast.forecastday[1].day.condition.icon;\n      let icon2 = data.forecast.forecastday[2].day.condition.icon;\n      let dayData = data.forecast.forecastday[1].date.toString();\n      let dayDate = new Date(dayData);\n      let dayOfWeek = dayDate.toLocaleString(\"en-GB\", {\n        weekday: \"short\"\n      });\n      let dayOfMonth = dayDate.toLocaleString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"short\"\n      });\n      let day1Data = data.forecast.forecastday[1].date.toString();\n      let day1Date = new Date(day1Data);\n      let dayOfWeek1 = day1Date.toLocaleString(\"en-GB\", {\n        weekday: \"short\"\n      });\n      let dayOfMonth1 = day1Date.toLocaleString(\"en-GB\", {\n        day: \"numeric\",\n        month: \"short\"\n      });\n      let day2Data = data.forecast.forecastday[2].date.toString();\n      let day2Date = new Date(day2Data);\n      let dayOfWeek2 = day2Date.toLocaleString(\"en-US\", {\n        weekday: \"short\"\n      });\n      let dayOfMonth2 = day2Date.toLocaleString(\"en-US\", {\n        day: \"numeric\",\n        month: \"short\"\n      });\n    });\n\n    // setWeatherData(weather)\n  };\n\n  const handleModalClose = () => {\n    setModalShow(false);\n    setWeatherData(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.weatherBtn,\n      onClick: weatherBtnHandler,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloud\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalShow,\n      onHide: handleModalClose,\n      animation: true,\n      centered: true,\n      children: [\" \", /*#__PURE__*/_jsxDEV(ModalPreloader, {\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: modalStyles.basicDataModal,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: modalStyles.basicDataTitle,\n          children: \"Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherBtn, \"UnoYMgbR9Xq+0dX4onzW9ycUccs=\");\n_c = WeatherBtn;\nexport default WeatherBtn;\nvar _c;\n$RefreshReg$(_c, \"WeatherBtn\");","map":{"version":3,"names":["React","useState","useEffect","ModalPreloader","styles","modalStyles","Button","Modal","numeral","FontAwesomeIcon","faCloud","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","WeatherBtn","props","_s","modalShow","setModalShow","weatherData","setWeatherData","loading","setLoading","console","log","geoJsonData","setTimeout","weatherBtnHandler","capitalCity","fetch","properties","iso_a2","then","res","json","catch","e","error","weather","data","icon","forecast","forecastday","day","condition","icon1","icon2","dayData","date","toString","dayDate","Date","dayOfWeek","toLocaleString","weekday","dayOfMonth","month","day1Data","day1Date","dayOfWeek1","dayOfMonth1","day2Data","day2Date","dayOfWeek2","dayOfMonth2","handleModalClose","children","className","weatherBtn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","animation","centered","Header","basicDataModal","Title","basicDataTitle","Body","Footer","variant","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/buttons/WeatherBtn.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport ModalPreloader from \"../../modal preloader/ModalPreloader\";\n\nimport styles from \"./Button.module.css\";\nimport modalStyles from './Modal.module.css'\n\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport numeral from \"numeral\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloud} from '@fortawesome/free-solid-svg-icons'\n\nconst API_BASE = 'http://localhost:3001'\n\nconst WeatherBtn = (props) => {\n  const [modalShow, setModalShow] = useState(false);\n  const [weatherData, setWeatherData ] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  console.log(props.geoJsonData)\n\n  useEffect(() => { // For loading the preloader\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000)\n  },[weatherData])\n\n\n\n  const weatherBtnHandler = async () => {\n    setModalShow(true);\n    // Get capital City\n    const capitalCity = await fetch(`${API_BASE}/capital-city/${props.geoJsonData.properties.iso_a2}`)\n    .then(res => res.json())\n    .catch(e => console.error('Error', e))\n\n    // Get Weather data\n    const weather = await fetch(`${API_BASE}/weather/${capitalCity}`)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data);\n        let icon = data.forecast.forecastday[0].day.condition.icon;\n        let icon1 = data.forecast.forecastday[1].day.condition.icon;\n        let icon2 = data.forecast.forecastday[2].day.condition.icon;\n\n        let dayData = data.forecast.forecastday[1].date.toString();\n        let dayDate = new Date(dayData);\n        let dayOfWeek = dayDate.toLocaleString(\"en-GB\", {\n          weekday: \"short\",\n        });\n        let dayOfMonth = dayDate.toLocaleString(\"en-GB\", {\n          day: \"numeric\",\n          month: \"short\",\n        });\n\n        let day1Data = data.forecast.forecastday[1].date.toString();\n        let day1Date = new Date(day1Data);\n        let dayOfWeek1 = day1Date.toLocaleString(\"en-GB\", {\n          weekday: \"short\",\n        });\n        let dayOfMonth1 = day1Date.toLocaleString(\"en-GB\", {\n          day: \"numeric\",\n          month: \"short\",\n        });\n\n        let day2Data = data.forecast.forecastday[2].date.toString();\n        let day2Date = new Date(day2Data);\n        let dayOfWeek2 = day2Date.toLocaleString(\"en-US\", {\n          weekday: \"short\",\n        });\n        let dayOfMonth2 = day2Date.toLocaleString(\"en-US\", {\n          day: \"numeric\",\n          month: \"short\",\n        });\n\n\n        \n    });\n\n    // setWeatherData(weather)\n  };\n\n  const handleModalClose = () => {\n    setModalShow(false);\n    setWeatherData(false);\n\n  }\n\n  return (\n    <>\n      <button className={styles.weatherBtn} onClick={weatherBtnHandler}>\n        <FontAwesomeIcon icon={faCloud}/>\n      </button>\n\n      {weatherData && <Modal \n      show={modalShow} \n      onHide={handleModalClose} \n      animation={true} \n      centered\n      > <ModalPreloader loading={loading} />\n        <Modal.Header className={modalStyles.basicDataModal}>\n          <Modal.Title className={modalStyles.basicDataTitle}>Weather</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>weather</p>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-primary\" onClick={handleModalClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal> }\n    </>\n  );\n};\n\nexport default WeatherBtn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}