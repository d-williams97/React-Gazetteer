{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON } from \"react-leaflet\";\nimport List from \"./list/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst Map = props => {\n  _s2();\n  const [border, setBorder] = useState(null);\n  const borderHandler = x => {\n    setBorder(x);\n  };\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchBounds = async () => {\n      _s();\n      if (border) {\n        try {\n          const data = await getBoundsHandler(border.properties.name);\n          const map = useMap();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    };\n    _s(fetchBounds, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n      return [useMap];\n    });\n  }, [border]);\n\n  // get data from openCageData to get boundary data \n  const getBoundsHandler = async countryName => {\n    const data = await fetch(`${API_BASE}/bounds-data/${countryName}`).then(res => res.json()).then(data => {\n      console.log(data);\n      return data.bounds;\n    }).catch(err => {\n      console.error(\"Error: \", err);\n      return null;\n    });\n    return data;\n  };\n\n  // function to fit data to bounds\n  // const fitToBounds = (bounds) => {\n  //   const map = useMap();\n  //   map.fitBounds()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        borderHandler: borderHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: border ? border : ''\n      }, JSON.stringify(border), false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s2(Map, \"frevUS7sySsiVuxNoIOOl+7B8XU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","styles","MapContainer","TileLayer","useMap","GeoJSON","List","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Map","props","_s2","border","setBorder","borderHandler","x","_s","$RefreshSig$","fetchBounds","data","getBoundsHandler","properties","name","map","e","console","error","countryName","fetch","then","res","json","log","bounds","catch","err","children","center","zoom","scrollWheelZoom","fileName","_jsxFileName","lineNumber","columnNumber","attribution","url","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport {useState, useEffect} from 'react'\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON, } from \"react-leaflet\";\nimport List from \"./list/List\";\n\n\nconst API_BASE = \"http://localhost:3001\";\n\n\nconst Map = (props) => {\n\n  const [border, setBorder] = useState(null)\n\n  const borderHandler = (x) => {\n     setBorder(x);\n  }\n\n\n\nuseEffect(() => {\n  const fetchBounds = async () => {\n    \n  if(border) {\n    try {\n      const data = await getBoundsHandler(border.properties.name)\n      const map = useMap();\n\n    } catch(e) {\n      console.error(e)\n    }\n     \n      \n  }\n  }\n\n},[border])\n\n  // get data from openCageData to get boundary data \n  const getBoundsHandler = async (countryName) => {\n    const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      return data.bounds;\n    })\n    .catch((err) => {\n      console.error(\"Error: \", err)\n      return null;\n    })\n    return data;\n}\n\n// function to fit data to bounds\n// const fitToBounds = (bounds) => {\n//   const map = useMap();\n//   map.fitBounds()\n// }\n\n  return (\n    <>\n    \n      <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true}>\n      <List\n     borderHandler={borderHandler} />\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {/* <Marker position={[51.505, -0.09]}>\n      <Popup>\n        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup>\n    </Marker> */}\n    <GeoJSON data={border ? border : ''} key={JSON.stringify(border)}/>\n      </MapContainer>\n    </>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}