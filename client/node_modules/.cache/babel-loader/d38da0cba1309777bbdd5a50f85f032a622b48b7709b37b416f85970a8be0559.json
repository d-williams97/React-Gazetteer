{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON } from \"react-leaflet\";\nimport List from \"./list/List\";\n\n// const API_BASE = \"http://localhost:3001\";\n// let boundsData;\n\n// const Map = (props) => {\n\n//   const [border, setBorder] = useState(null)\n\n//   const borderHandler = (x) => {\n//      setBorder(x);\n//   }\n\n// useEffect(() => {\n//   const fetchBounds = async () => {\n\n//   if(border) {\n//     try {\n//       const data = await getBoundsHandler(border.properties.name)\n\n//     } catch(e) {\n//       console.error(e)\n//     }\n\n//   }\n//   }\n\n// },[border])\n\n//   // get data from openCageData to get boundary data \n//   const getBoundsHandler = async (countryName) => {\n//     const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n//     .then((res) => res.json())\n//     .then((data) => {\n//       console.log(data);\n//       return data.bounds;\n//     })\n//     .catch((err) => {\n//       console.error(\"Error: \", err)\n//       return null;\n//     })\n//     return data;\n// }\n\n// // function to fit data to bounds\n// // const fitToBounds = (bounds) => {\n// //   const map = useMap();\n// //   map.fitBounds()\n// // }\n\n//   return (\n//     <>\n//      <List\n//      borderHandler={borderHandler} />\n//       <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true}>\n//         <TileLayer\n//           attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//         {/* <Marker position={[51.505, -0.09]}>\n//       <Popup>\n//         A pretty CSS3 popup. <br /> Easily customizable.\n//       </Popup>\n//     </Marker> */}\n//     <GeoJSON data={border ? border : ''} key={JSON.stringify(border)}/>\n//       </MapContainer>\n//     </>\n//   );\n// };\n\n// export default Map;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst innerBounds = [[49.505, -2.09], [53.505, 2.09]];\nconst outerBounds = [[50.505, -29.09], [52.505, 29.09]];\nconst redColor = {\n  color: 'red'\n};\nconst whiteColor = {\n  color: 'white'\n};\nfunction SetBoundsRectangles() {\n  _s();\n  const [bounds, setBounds] = useState(outerBounds);\n  const map = useMap();\n  const innerHandlers = useMemo(() => ({\n    click() {\n      setBounds(innerBounds);\n      map.fitBounds(innerBounds);\n    }\n  }), [map]);\n  const outerHandlers = useMemo(() => ({\n    click() {\n      setBounds(outerBounds);\n      map.fitBounds(outerBounds);\n    }\n  }), [map]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Rectangle, {\n      bounds: outerBounds,\n      eventHandlers: outerHandlers,\n      pathOptions: bounds === outerBounds ? redColor : whiteColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rectangle, {\n      bounds: innerBounds,\n      eventHandlers: innerHandlers,\n      pathOptions: bounds === innerBounds ? redColor : whiteColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SetBoundsRectangles, \"HYS9LKHenE2Vu7LqtQxCY4eG43E=\", false, function () {\n  return [useMap];\n});\n_c = SetBoundsRectangles;\nrender( /*#__PURE__*/_jsxDEV(MapContainer, {\n  bounds: outerBounds,\n  scrollWheelZoom: false,\n  children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SetBoundsRectangles, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"SetBoundsRectangles\");","map":{"version":3,"names":["React","useState","useEffect","styles","MapContainer","TileLayer","useMap","GeoJSON","List","jsxDEV","_jsxDEV","Fragment","_Fragment","innerBounds","outerBounds","redColor","color","whiteColor","SetBoundsRectangles","_s","bounds","setBounds","map","innerHandlers","useMemo","click","fitBounds","outerHandlers","children","Rectangle","eventHandlers","pathOptions","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","scrollWheelZoom","attribution","url","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport {useState, useEffect} from 'react'\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, useMap, GeoJSON, } from \"react-leaflet\";\nimport List from \"./list/List\";\n\n\n// const API_BASE = \"http://localhost:3001\";\n// let boundsData;\n\n\n// const Map = (props) => {\n\n//   const [border, setBorder] = useState(null)\n\n//   const borderHandler = (x) => {\n//      setBorder(x);\n//   }\n\n\n\n// useEffect(() => {\n//   const fetchBounds = async () => {\n    \n//   if(border) {\n//     try {\n//       const data = await getBoundsHandler(border.properties.name)\n\n//     } catch(e) {\n//       console.error(e)\n//     }\n     \n      \n//   }\n//   }\n\n// },[border])\n\n//   // get data from openCageData to get boundary data \n//   const getBoundsHandler = async (countryName) => {\n//     const data = await fetch (`${API_BASE}/bounds-data/${countryName}`)\n//     .then((res) => res.json())\n//     .then((data) => {\n//       console.log(data);\n//       return data.bounds;\n//     })\n//     .catch((err) => {\n//       console.error(\"Error: \", err)\n//       return null;\n//     })\n//     return data;\n// }\n\n// // function to fit data to bounds\n// // const fitToBounds = (bounds) => {\n// //   const map = useMap();\n// //   map.fitBounds()\n// // }\n\n//   return (\n//     <>\n//      <List\n//      borderHandler={borderHandler} />\n//       <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true}>\n//         <TileLayer\n//           attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//         />\n//         {/* <Marker position={[51.505, -0.09]}>\n//       <Popup>\n//         A pretty CSS3 popup. <br /> Easily customizable.\n//       </Popup>\n//     </Marker> */}\n//     <GeoJSON data={border ? border : ''} key={JSON.stringify(border)}/>\n//       </MapContainer>\n//     </>\n//   );\n// };\n\n// export default Map;\n\n\nconst innerBounds = [\n  [49.505, -2.09],\n  [53.505, 2.09],\n]\nconst outerBounds = [\n  [50.505, -29.09],\n  [52.505, 29.09],\n]\n\nconst redColor = { color: 'red' }\nconst whiteColor = { color: 'white' }\n\nfunction SetBoundsRectangles() {\n  const [bounds, setBounds] = useState(outerBounds)\n  const map = useMap()\n\n  const innerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(innerBounds)\n        map.fitBounds(innerBounds)\n      },\n    }),\n    [map],\n  )\n  const outerHandlers = useMemo(\n    () => ({\n      click() {\n        setBounds(outerBounds)\n        map.fitBounds(outerBounds)\n      },\n    }),\n    [map],\n  )\n\n  return (\n    <>\n      <Rectangle\n        bounds={outerBounds}\n        eventHandlers={outerHandlers}\n        pathOptions={bounds === outerBounds ? redColor : whiteColor}\n      />\n      <Rectangle\n        bounds={innerBounds}\n        eventHandlers={innerHandlers}\n        pathOptions={bounds === innerBounds ? redColor : whiteColor}\n      />\n    </>\n  )\n}\n\nrender(\n  <MapContainer bounds={outerBounds} scrollWheelZoom={false}>\n    <TileLayer\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    <SetBoundsRectangles />\n  </MapContainer>,\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}