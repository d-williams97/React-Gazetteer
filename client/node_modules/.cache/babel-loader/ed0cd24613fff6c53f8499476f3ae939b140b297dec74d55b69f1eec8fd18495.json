{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, LayersControl, useMap, GeoJSON } from \"react-leaflet\";\nimport List from \"./list/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst Map = props => {\n  _s();\n  const [border, setBorder] = useState(null);\n  console.log(border);\n  const borderHandler = x => {\n    setBorder(x);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      scrollWheelZoom: true,\n      minZoom: 1,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        borderHandler: borderHandler,\n        border: border\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"topright\",\n        children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          name: \"National Geographic Map\",\n          checked: \"true\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"Tiles \\xA9 Esri \\u2014 National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC\",\n            url: \"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n          name: \"Jawg Terrain Map\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"<a href=\\\"http://jawg.io\\\" title=\\\"Tiles Courtesy of Jawg Maps\\\" target=\\\"_blank\\\">\\xA9 <b>Jawg</b>Maps</a> \\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.jawg.io/jawg-terrain/{z}/{x}/{y}{r}.png?access-token=ZU4kLdGveFQWTTQMZZMGBaFHCVW1H7KgXGT1wBgrH7tc1FtUvJCblJnSOG50RcSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: border ? border : \"\"\n      }, JSON.stringify(border), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Map, \"DxRhtSzCTAr6EtVqbv0K9v3FCoU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","styles","MapContainer","TileLayer","LayersControl","useMap","GeoJSON","List","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Map","props","_s","border","setBorder","console","log","borderHandler","x","children","center","zoom","scrollWheelZoom","minZoom","fileName","_jsxFileName","lineNumber","columnNumber","position","BaseLayer","name","checked","attribution","url","data","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport {\n  MapContainer,\n  TileLayer,\n  LayersControl,\n  useMap,\n  GeoJSON,\n} from \"react-leaflet\";\nimport List from \"./list/List\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nconst Map = (props) => {\n  const [border, setBorder] = useState(null);\n  console.log(border);\n\n  const borderHandler = (x) => {\n    setBorder(x);\n  };\n\n  return (\n    <>\n      <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true} minZoom={1} >\n        <List borderHandler={borderHandler} border={border} />\n        <LayersControl position=\"topright\">\n          <LayersControl.BaseLayer name=\"National Geographic Map\" checked='true' >\n            <TileLayer\n              attribution=\"Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC\"\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}\"\n            />\n          </LayersControl.BaseLayer>\n\n          <LayersControl.BaseLayer name=\"Jawg Terrain Map\">\n            <TileLayer\n              attribution='<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.jawg.io/jawg-terrain/{z}/{x}/{y}{r}.png?access-token=ZU4kLdGveFQWTTQMZZMGBaFHCVW1H7KgXGT1wBgrH7tc1FtUvJCblJnSOG50RcSE\"\n            />\n          </LayersControl.BaseLayer>\n        </LayersControl>\n        {/* <Marker position={[51.505, -0.09]}>\n      <Popup>\n        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup>\n    </Marker> */}\n        <GeoJSON data={border ? border : \"\"} key={JSON.stringify(border)} />\n      </MapContainer>\n    </>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,0BAA0B;AACjC,SACEC,YAAY,EACZC,SAAS,EACTC,aAAa,EACbC,MAAM,EACNC,OAAO,QACF,eAAe;AACtB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1CkB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAEnB,MAAMI,aAAa,GAAIC,CAAC,IAAK;IAC3BJ,SAAS,CAACI,CAAC,CAAC;EACd,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA,CAACP,YAAY;MAACqB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,eAAe,EAAE,IAAK;MAACC,OAAO,EAAE,CAAE;MAAAJ,QAAA,gBACvEb,OAAA,CAACF,IAAI;QAACa,aAAa,EAAEA,aAAc;QAACJ,MAAM,EAAEA;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDrB,OAAA,CAACL,aAAa;QAAC2B,QAAQ,EAAC,UAAU;QAAAT,QAAA,gBAChCb,OAAA,CAACL,aAAa,CAAC4B,SAAS;UAACC,IAAI,EAAC,yBAAyB;UAACC,OAAO,EAAC,MAAM;UAAAZ,QAAA,eACpEb,OAAA,CAACN,SAAS;YACRgC,WAAW,EAAC,8HAAiI;YAC7IC,GAAG,EAAC;UAAkG;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACqB,CAAC,eAE1BrB,OAAA,CAACL,aAAa,CAAC4B,SAAS;UAACC,IAAI,EAAC,kBAAkB;UAAAX,QAAA,eAC9Cb,OAAA,CAACN,SAAS;YACRgC,WAAW,EAAC,qMAAiM;YAC7MC,GAAG,EAAC;UAAwI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7I;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACqB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAMhBrB,OAAA,CAACH,OAAO;QAAC+B,IAAI,EAAErB,MAAM,GAAGA,MAAM,GAAG;MAAG,GAAMsB,IAAI,CAACC,SAAS,CAACvB,MAAM,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC,gBACf,CAAC;AAEP,CAAC;AAACf,EAAA,CApCIF,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}