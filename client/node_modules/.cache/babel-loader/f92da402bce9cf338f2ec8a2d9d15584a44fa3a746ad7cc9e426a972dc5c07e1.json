{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { MapContainer, GeoJSON, Marker, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport List from \"./list/List\";\nimport MapLayers from \"./mapLayers/MapLayers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nconst Map = props => {\n  _s();\n  // Getting country data for select\n  const [countryData, setCountryData] = useState(null);\n  const getCountries = async () => {\n    const data = await fetch(`${API_BASE}/country-data`).then(res => res.json()).then(data => {\n      setCountryData(data);\n    }).catch(err => console.error(\"Error: \", err));\n  };\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  // Getting the border\n  const [border, setBorder] = useState(null);\n  const borderHandler = x => {\n    setBorder(x);\n  };\n\n  // ------- Airports ---------- //\n\n  const [airports, setAirports] = useState(null);\n\n  // Getting Airport data\n  const airportsHandler = async countryCode => {\n    let data = await fetch(`${API_BASE}/city-data`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        countryCode: countryCode\n      })\n    }).then(res => res.json()).catch(e => console.error('Error', e));\n    setAirports(data);\n  };\n\n  // Creating airport icon \n  const airportIcon = new Icon({\n    iconUrl: require('../../assets/airport2.png'),\n    iconSize: [38, 38]\n  });\n\n  // \n  const handleMarkerMouseOver = e => {\n    console.log(e.target);\n    e.target.getPopUp().openPopUp();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [0, 0],\n      zoom: 2,\n      scrollWheelZoom: true,\n      minZoom: 1,\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        borderHandler: borderHandler,\n        countryData: countryData,\n        getAirports: airportsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapLayers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: airports ? airports.map(e => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [e.lat, e.lng],\n          icon: airportIcon,\n          onMouseOver: handleMarkerMouseOver,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: border ? border : \"\",\n        style: {\n          color: \"red\",\n          weight: 1,\n          opacity: 1\n        }\n      }, JSON.stringify(border), false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Map, \"sbPmSUKKaLTROksrpH7FcFcv/1w=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","GeoJSON","Marker","Popup","Icon","MarkerClusterGroup","styles","List","MapLayers","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Map","props","_s","countryData","setCountryData","getCountries","data","fetch","then","res","json","catch","err","console","error","border","setBorder","borderHandler","x","airports","setAirports","airportsHandler","countryCode","method","headers","body","JSON","stringify","e","airportIcon","iconUrl","require","iconSize","handleMarkerMouseOver","log","target","getPopUp","openPopUp","children","center","zoom","scrollWheelZoom","minZoom","getAirports","fileName","_jsxFileName","lineNumber","columnNumber","map","position","lat","lng","icon","onMouseOver","name","style","color","weight","opacity","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/react-gazetteer/client/src/components/map/Map.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { MapContainer, GeoJSON, Marker, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\"\nimport MarkerClusterGroup from \"react-leaflet-cluster\"\n\nimport styles from \"./Map.module.css\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport List from \"./list/List\";\nimport MapLayers from \"./mapLayers/MapLayers\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nconst Map = (props) => {\n  // Getting country data for select\n  const [countryData, setCountryData] = useState(null);\n\n  const getCountries = async () => {\n    const data = await fetch(`${API_BASE}/country-data`)\n      .then((res) => res.json())\n      .then((data) => {\n        setCountryData(data);\n      })\n      .catch((err) => console.error(\"Error: \", err));\n  };\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  // Getting the border\n  const [border, setBorder] = useState(null);\n\n  const borderHandler = (x) => {\n    setBorder(x);\n  };\n\n\n\n// ------- Airports ---------- //\n\n  const [airports, setAirports] = useState(null)\n\n  // Getting Airport data\n  const airportsHandler = async (countryCode) => {\n    let data = await fetch(`${API_BASE}/city-data`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        countryCode: countryCode,\n      }),\n    })\n      .then((res) => res.json())\n      .catch(e => console.error('Error', e))\n      setAirports(data);\n  };\n\n  // Creating airport icon \n  const airportIcon = new Icon({\n    iconUrl: require('../../assets/airport2.png') ,\n    iconSize: [38,38],\n  })\n\n  // \n  const handleMarkerMouseOver = (e) => {\n    console.log(e.target);\n    e.target.getPopUp().openPopUp()\n  }\n\n\n\n  return (\n    <>\n      <MapContainer center={[0, 0]} zoom={2} scrollWheelZoom={true} minZoom={1}>\n        <List\n          borderHandler={borderHandler}\n          countryData={countryData}\n          getAirports={airportsHandler}\n        />\n        <MapLayers />\n        <MarkerClusterGroup>\n        {airports ?  airports.map(e => (\n          <Marker position={[e.lat, e.lng]} icon={airportIcon} onMouseOver={handleMarkerMouseOver} >\n            <Popup> <h4>{e.name}</h4> </Popup>\n          </Marker>\n        )) : ''}\n        </MarkerClusterGroup>\n        <GeoJSON\n          data={border ? border : \"\"}\n          key={JSON.stringify(border)}\n          style={{\n            color: \"red\",\n            weight: 1,\n            opacity: 1,\n          }}\n        />\n      </MapContainer>\n    </>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}